set mouse=a
set smartindent
set tabstop=4
set shiftwidth=4
syntax on
colorscheme elflord

"Shift-Tab when you want a tab and not autocomplete
inoremap <S-Tab> <TAB>

"for case insensitive word search
set ignorecase

"trying out logic for typing quotes and friends near words
function! SmartQuotesEtc(char1, char2)
	let curr = getline('.')[col('.') - 1]
	let prev = getline('.')[col('.') - 2]

	let currmatch = matchstr(curr, '^[a-zA-Z0-9_;:.<>(){}\\?]\?$')
	let prevmatch = matchstr(prev, '^[a-zA-Z0-9_;:.<>(){}\\?]\?$')

	if (a:char1 == "<" && empty(prevmatch))
		return a:char1
	endif

	if (curr == ")" || curr == ">" || curr == "]" || curr == "}")
		return a:char1.a:char2."\<left>"
	endif

	if (a:char1 == "(" || a:char1 == "[" || a:char1 == "<")
		if empty(currmatch) && !empty(prevmatch)
			return a:char1.a:char2."\<left>"
		endif
	endif

	if !empty(currmatch) || 
			\ !empty(prevmatch)
		return a:char1
	endif

	return a:char1.a:char2."\<left>"
endfunction

"basic completion for quotes, brackets, etc.
inoremap " <C-R>=SmartQuotesEtc('"', '"')<CR>
inoremap ' <C-R>=SmartQuotesEtc("'", "'")<CR>
inoremap ( <C-R>=SmartQuotesEtc('(', ')')<CR>
inoremap [ <C-R>=SmartQuotesEtc('[', ']')<CR>
inoremap < <C-R>=SmartQuotesEtc('<', '>')<CR>
inoremap {<cr> {<cr>}<c-o>O

inoremap #i #include<space><><left>

"completion for control structures
imap if<cr> if<space>(<right><cr>{<cr>
imap while<cr> while<space>(<right><cr>{<cr>
imap for<cr> for<space>(size_t<space>i<space>=<space>0;<space>i<space><<space>count;<space>++i<right><cr>{<cr>

" ctrl + c to save
inoremap <c-c> <c-o>:w<cr>
nnoremap <c-c> :w<cr>

" \ + arrow keys yo move lines
inoremap <Leader><Down> <c-o>:m+1<cr>
inoremap <Leader><Up> <c-o>:m-2<cr>
nnoremap <Leader><Up> :m-2<cr>
nnoremap <Leader><Down> :m+1<cr>

"function to delete both quotes, brackets, etc. when cursor is in the middle
function! ClearQuotes()
	let curr = getline('.')[col('.') - 1]
	let prev = getline('.')[col('.') - 2]

	let opening = ['"', "'", "[", "{", "(", "<"]
	let closing = ['"', "'", "]", "}", ")", ">"]

	if (index(opening, prev) >= 0 && index(opening, prev) == index(closing, curr))
		return "\<ESC>s\<right>\<BS>"
	endif

	return "\<BS>"
endfunction

"press tab to autocomplete when near alphanumeric characters or _
"doesnt't work when you want a tab at the end of line but you can modify it
"(or just type . and press tab)
function! Tab_auto()
	let curr = getline('.')[col('.') - 1]
	let prev = getline('.')[col('.') - 2]
	let match = matchstr(prev, '^[a-zA-Z0-9_]\?$')
	let currmatch = matchstr(curr, '^[a-zA-Z0-9_]\?$')

	if pumvisible() "empty(currmatch) && (pumvisible() || !empty(match))
		return "\<C-N>\<C-P>"
	else
		return "\<Space>"
	endif
endfunction

"function mappings
inoremap <expr> <Tab> empty(matchstr(getline('.')[col('.') - 1], '^[a-zA-Z0-9_]\?$')) && !empty(matchstr(getline('.')[col('.') - 2], '^[a-zA-Z0-9_]\?$')) ? "\<C-N><C-R>=Tab_auto()<CR>" : "\<TAB>"
inoremap <BS> <C-R>=ClearQuotes()<CR>

autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

set showmatch
